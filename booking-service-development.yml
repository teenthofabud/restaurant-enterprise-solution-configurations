# Health
management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    mongo:
      enabled: 'true'
  endpoint:
    health:
      show-details: always

# Business
res:
  booking:
    engagement:
      time:
        format: HH:mm:ss
      fields-to-escape: ''
      date:
        format: dd-MM-yyyy
      timestamp:
        format: dd-MM-yyyy~HH:mm:ss
    experience:
      fields-to-escape: ''
    version: '@project.version@'
    association:
      fields-to-escape: ''
    description: '@project.description@'

booking:
  customer:
    service:
      port: '11001'
      url: localhost:${booking.customer.service.port}
  establishmentarea:
    service:
      url: localhost:${booking.establishmentarea.service.port}
      port: '10001'

# Info Endpoint
info:
  app:
    name: '@project.name@'
    encoding: '@project.build.sourceEncoding@'
    java:
      version: '@java.version@'
    version: '@project.version@'
    description: '@project.description@'

# Swagger
springdoc:
  swagger-ui:
    enabled: 'true'

# circuit breaker
feign:
  circuitbreaker:
    enabled: 'true'
  client:
    config:
      customer-service:
        connectTimeout: '250'
        readTimeout: '500'
        loggerLevel: basic
      establishmentarea-service:
        readTimeout: '500'
        loggerLevel: basic
        connectTimeout: '250'
      default:
        loggerLevel: basic

spring:
# mongo
  data:
    mongodb:
      host: localhost
      port: '27017'
      database: booking
# Sleuth
  sleuth:
    sampler:
      percentage: '1.0'
    web:
      skipPattern: (^cleanup.*|.+favicon.*)
# Loadbalancer - This is permanent
  cloud:
    service-registry:
      auto-registration:
        enabled: 'true'
    loadbalancer:
      ribbon:
        enabled: 'false'
    discovery:
      enabled: 'true'
# Zipkin
  zipkin:
    enabled: 'false'
    baseUrl: http://localhost:9411

# Eureka
eureka:
  client:
    instance-info-replication-interval-seconds: '120'
    enabled: ${BOOKING_EUREKA_CLIENT_ENABLED}
    serviceUrl:
      defaultZone: http://${BOOKING_EUREKA_HOST}:${BOOKING_EUREKA_PORT}/eureka
      registerWithEureka: 'true'
    initial-instance-info-replication-interval-seconds: '120'
  instance:
    prefer-ip-address: 'true'

server:
  port: ${BOOKING_SERVER_PORT}

# Logging
logging:
  level:
    org:
      mongodb: INFO
